// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[
    {
        "key": "tab",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "cmd+right",
        "command": "workbench.action.terminal.moveToLineEnd",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+[IntlRo]",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+[Minus]",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+[Semicolon]",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+shift+[BracketLeft]",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+v",
        "command": "editor.action.clipboardPasteAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+cmd+u",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+r",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly && vim.mode == 'Insert'"
    },
    {
        "key": "cmd+z",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "editor.emmet.action.balanceOut",
        "when": "editorTextFocus && !editorReadOnly && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+]",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "shift+alt+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+[",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "shift+alt+left",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+right",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+[Minus]",
        "command": "extension.htmlTagWrap",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+w",
        "command": "-extension.htmlTagWrap",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "editor.emmet.action.nextEditPoint"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "editor.emmet.action.prevEditPoint"
    },
    // {
    //     "key": "g t",
    //     "command": "workbench.action.nextEditor",
    //     "when": "textInputFocus && vim.mode == 'Normal'"
    // },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "m b",
        "command": "workbench.action.previousEditor",
        "when": "textInputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+u",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "center-editor-window.center",
        "when": "textInputFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+0",
        "command": "center-editor-window.center",
        "when": "textInputFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+m",
        "command": "extension.vim_cmd+d",
        "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
    },
    {
        "key": "cmd+d",
        "command": "extension.vim_cmd+d",
        "when": "editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "a",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus && listFocus &&explorerViewletVisible && !inputFocus"
    },
    {
        "key": "shift+a",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus && listFocus &&explorerViewletVisible && !inputFocus"
    },
    {
        "key": "d",
        "command": "deleteFile",
        "when": "explorerViewletFocus && listFocus &&explorerViewletVisible && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.select",
        "when": "explorerViewletFocus && listFocus &&explorerViewletVisible && !inputFocus"
    },
    {
        "key": "ctrl+cmd+p",
        "command": "projectManager.listProjects"
    },
    {
        "key": "alt+cmd+p",
        "command": "-projectManager.listProjects"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+shift+j",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "cmd+shift+k",
        "command": "workbench.action.terminal.focusPrevious"
    },
    {
        "key": "ctrl+cmd+t",
        "command": "workbench.action.terminal.newInActiveWorkspace"
    },
    {
        "key": "cmd+shift+w",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+d",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+shift+cmd+w",
        "command": "workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+cmd+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "cmd+k shift+cmd+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+shift+c",
        "command": "csscomb.execute"
    },
    {
        "key": "alt+cmd+[BracketLeft]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+[BracketLeft]",
        "command": "editor.unfoldRecursively",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+]",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+[Minus]",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && !vim.mode == 'Insert'"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+p",
    //     "command": "workbench.action.quickOpen",
    //     "when": " !terminalFocus"
    // },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+alt+cmd+o",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+r",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "shift+alt+cmd+r",
        "command": "extension.snippetSearch",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "-extension.snippetSearch",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "g reset --soft head^"
        },
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "gch "
        },
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+alt+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "cat /dev/urandom | base64 | fold -w 10 | head -n 1"
        },
        "when": "terminalFocus"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "shift+tab",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+o",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+alt+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "shift+alt+cmd+s",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus"
    }
]
