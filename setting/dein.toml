[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # color scheme
repo = 'morhetz/gruvbox'
hook_add = '''
  set background=dark
  " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
  au MyAutoCmd VimEnter * nested colorscheme gruvbox
'''

[[plugins]] # dirctory tree
repo = 'scrooloose/nerdtree'
hook_add = '''
  " short cut key
  if !has('gui_running')
    map VimNerdTree <S-D-e>
  endif
  map <S-D-e> :NERDTreeToggle<CR>
  " How can I open a NERDTree automatically when vim starts up if no files were specified?
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
  " 他のバッファをすべて閉じた時にNERDTreeが開いていたらNERDTreeも一緒に閉じる。
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
  " NERDTreeを現在開いているタブファイルパスと同期する
  autocmd BufEnter * lcd %:p:h
  " ドットファイルを可視化
  let g:NERDTreeShowHidden=1
  let g:NERDTreeIgnore = ['^node_modules$', '^.git$', '^.DS_Store$', '.css.map$']
  let g:NERDTreeWinSize = 20
'''

[[plugins]] # indent
repo = 'Yggdroot/indentLine'
hook_add = '''
  let g:indentLine_color_term = 245
  let g:indentLine_char_list = ['|']
'''

[[plugins]] # syntax highlight
repo = 'sheerun/vim-polyglot'
hook_add = '''
  let g:polyglot_disabled = ['markdown']
'''

[[plugins]] # git(for displaying branch name in status line)
repo = 'tpope/vim-fugitive'

[[plugins]] # exec script
repo = 'thinca/vim-quickrun'
hook_add = '''
  "" quickrun
  nnoremap <Leader>r :QuickRun<CR>
  " nnoremap <C-U>qr :QuickRun<CR>
  let g:quickrun_config={'*': {'vertical': ''}}
  let g:quickrun_config.cpp = {
              \   'command': 'g++',
              \   'cmdopt': '-std=c++11'
              \ }
'''

[[plugins]] # exec script
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/vimshell.vim'
hook_add = '''
  " nnoremap <Leader>sh :VimShellPop<CR>
  " nnoremap <Leader>sh :vertical terminal<CR>
  nnoremap <Leader>sh :terminal ++rows=10<CR>
  let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'
  " let g:vimshell_prompt =  '$ '
'''
